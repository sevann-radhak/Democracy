@model Democracy.ModelsView.DetailsVotingView

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Voting</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.State.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Remarks)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Remarks)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateTimeStart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateTimeStart)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateTimeEnd)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateTimeEnd)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsForAllUsers)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsForAllUsers)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsEnabledBlankVote)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsEnabledBlankVote)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.QuantityVotes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.QuantityVotes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.QuantityBlankVotes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.QuantityBlankVotes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CandidateWinId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CandidateWinId)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.VotingId }, new { @class = "btn btn-primary btn-sm" })

    @if (!Model.IsForAllUsers)
    {
        @Html.ActionLink("Add group", "AddGroup", new { id = Model.VotingId }, new { @class = "btn btn-warning btn-sm" })
    }

    @Html.ActionLink("Add candidate", "AddCandidate", new { id = Model.VotingId }, new { @class = "btn btn-info btn-sm" })
    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-default btn-sm" })
</p>


<div class="row">
    <div class="col-md-4">
        <section id="groups">
            <h4>Groups</h4>
            @if (Model.VotingGroups.Count > 0)
            {
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.VotingGroups[0].Group.Description)
                        </th>

                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.VotingGroups.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => modelItem.VotingGroups[i].Group.Description)
                            </td>

                            <td>
                                @Html.ActionLink("Delete", "DeleteGroup", new { id = Model.VotingGroups[i].Group.GroupId }, new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Are you shure to delete this group?');" })
                            </td>
                        </tr>
                    }

                </table>

            }
            else
            {
                <h5>Not groups found</h5>
            }
        </section>
    </div>
    <div class="col-md-8">
        <section id="candidates">
            <h4>Candidates</h4>
            @if (Model.Candidates.Count > 0)
            {
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.UserName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.Photo)
                        </th>
                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.Candidates.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => Model.Candidates[i].User.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.Candidates[i].User.FullName)
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(Model.Candidates[i].User.Photo))
                                {
                                    <img src="@Url.Content(Model.Candidates[i].User.Photo)" alt="@Model.Candidates[i].User.FullName" style="width:100px; height:100px; max-width: 100%; height: auto" />
                                }
                            </td>
                            <td>
                                @Html.ActionLink("Delete", "DeleteCandidate", new { id = Model.Candidates[i].CandidateId }, new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Are you shure to delete this candidate?');" })
                            </td>
                        </tr>
                    }

                </table>
            }
            else
            {
                <h5>Not candidates found</h5>
            }
        </section>
    </div>
</div>
